name: Flutter GD test Release app CI

on:
  release:
    types: [published]
  #push:
  #  tags:
  #    - '*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Flutter GD test Android build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.19.2
          channel: 'stable'
          cache: true
        
      - name: Install dependencies
        run: flutter pub get

      - name: Dart linter
        run: dart analyze --fatal-infos

      - name: Run tests
        run: flutter test

      - name: Start release build
        run: flutter build appbundle --build-name ${{github.ref_name}}

      - name: Sign App Bundle
        uses: r0adkll/sign-android-release@v1   
        id: sign_app
        with:
         releaseDirectory: build/app/outputs/bundle/release/
         signingKeyBase64: ${{ secrets.STORE_BASE64 }}
         alias: ${{ secrets.KEY_ALIAS }}
         keyStorePassword: ${{ secrets.STORE_PASSWORD }}
         keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Publish Release artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-${{github.ref_name}}
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release-${{github.ref_name}}

      #- name: Release Build to Google Play
      #  uses: r0adkll/upload-google-play@v1
      #  with:
      #    serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
      #    packageName: com.test.flutter_android
      #    releaseFiles: app-release.aab
      #    track: alpha
      #    status: completed
